
<!-- Analysis name: Sarcoma DNA Illumina xLoc -->
<!-- Analysis ID: sarcoma.ilmn.dna.xloc -->
<!-- Analysis description: Pipeline for targeted sarcoma translocation detection-->
<!-- Version: 0.0 -->

<Pipeline>


<Reference class="buffer.ReferenceFile" filename="/mounts/genome/human_g1k_v37.fasta" />
<reads1 class="buffer.FastQFile" filename="${INPUTFILE1}"/>
<reads2 class="buffer.FastQFile" filename="${INPUTFILE2}" />
<CaptureBed class="buffer.BEDFile" filename="/yggdrasil/workspace/nix/Nix_Data/N30/CapRegions/hg19GenicCaptureRegionsExtChrRm.bed" />

<WranglerLogger class="operator.StatusLogger" />

<AlignBowtie2 class="operator.bwt2.Bowtie2Align" threads="6" sensitivity="--very-sensitive" style="--local" bwt2.options="--reorder --mm" sample="${SAMPLE}">
  <input>
    <Reference />
    <reads1 />
    <reads2 />
  </input>
  <output>
    <rawFullBAM class="buffer.BAMFile" filename="${SAMPLE}.Full.bam" />
  </output>
</AlignBowtie2>

<CoordSort class="operator.picard.CoordinateSort" jvmargs="-Djava.io.tmpdir=./" memory.range=" -Xms2G -Xmx20G " >
  <input>
    <rawFullBAM>
  </input>
  <output>
    <CSFullBAM class="buffer.BAMFile" filename="${SAMPLE}Full.CoorSort.bam" />
  </output>
</CoordSort>

<PicardRmDup class="operator.picard.MarkDuplicates" picard.remove.duplicates="true">
  <input>
    <CSFullBAM />
  </input>
  <output>
    <DupFreeFullBAM class="buffer.BAMFile" filename="${SAMPLE}Full.DupFreeCoorSort.bam" />
  </output>
</PicardRmDup>

<NameSort class="operator.picard.NameSort" jvmargs="-Djava.io.tmpdir=./" memory.range=" -Xms2G -Xmx20G ">
  <input>
    <DupFreeFullBAM />
  </input>
  <output>
    <DupFreeNameFullBAM class="buffer.BAMFile" filename="${SAMPLE}Full.DupFreeNameSort.bam" />
  </output>
</NameSort>

<TrimReads1 class="operator.fqUtils.FastxTrimmer" trim.num="30" >
  <input>
    <reads1 />
  </input>
  <output>
      <reads1N30 class="buffer.FastQFile" filename="${SAMPLE}R1.N30.fastq" />
  </output>
</TrimReads1>

<TrimReads2 class="operator.fqUtils.FastxTrimmer" trim.num="30" >
  <input>
    <reads2 />
  </input>
  <output>
      <reads2N30 class="buffer.FastQFile" filename="${SAMPLE}R2.N30.fastq" />
  </output>
</TrimReads1>

<AlignBowtie2N30 class="operator.bwt2.Bowtie2Align" threads="6" sensitivity="--very-sensitive" style="--local" bwt2.options="--reorder --mm" sample="${SAMPLE}" >
  <input>
    <Reference />
    <reads1N30 />
    <reads2N30 />
  </input>
  <output>
    <rawN30BAM class="buffer.BAMFile" filename="${SAMPLE%.*}N30.bam" />
  </output>
</AlignBowtie2N30>

<CoordSortN30 class="operator.picard.CoordinateSort" jvmargs="-Djava.io.tmpdir=./" memory.range=" -Xms2G -Xmx20G " >
  <input>
    <rawN30BAM>
  </input>
  <output>
    <CSN30BAM class="buffer.BAMFile" filename="${SAMPLE}N30.CoorSort.bam" />
  </output>
</CoordSortN30>

<PicardRmDupN30 class="operator.picard.MarkDuplicates" picard.remove.duplicates="true">
  <input>
    <CSN30BAM />
  </input>
  <output>
    <DupFreeN30BAM class="buffer.BAMFile" filename="${SAMPLE}N30.DupFreeCoorSort.bam" />
  </output>
</PicardRmDupN30>

<NameSortN30 class="operator.picard.NameSort" jvmargs="-Djava.io.tmpdir=./" memory.range=" -Xms2G -Xmx20G ">
  <input>
    <DupFreeN30BAM />
  </input>
  <output>
    <DupFreeNameN30BAM class="buffer.BAMFile" filename="${SAMPLE}N30.DupFreeNameSort.bam" />
  </output>
</NameSortN30>

<ParseFull class="operator.useq.SamSVFilter" samsv.dir="SSVF${SAMPLE}Full" memory.range=" -Xms2G -Xmx20G " jvmargs="-Djava.io.tmpdir=./" >
  <input>
    <CaptureBed />
    <DupFreeNameFullBAM />
  </input>
  <output>
  </output>
</ParseFull>

<ParseN30 class="operator.useq.SamSVFilter" samsv.dir="SSVF${SAMPLE}N30" memory.range=" -Xms2G -Xmx20G " jvmargs="-Djava.io.tmpdir=./" > 
  <input>
    <CaptureBed />
    <DupFreeNameN30BAM />
  </input>
  <output>
  </output>
</ParseN30>

<MergeBAMs class="operator.picard.MergeSam" jvmargs="-Djava.io.tmpdir=./" memory.range=" -Xms2G -Xmx20G " >
  <input>
    <FullSpan class="buffer.BAMFile" filename="SSVF${SAMPLE}Full/passSpan_${SAMPLE}Full.DupFreeNameSort.bam" />
    <FullSoft class="buffer.BAMFile" filename="SSVF${SAMPLE}Full/passSoft_${SAMPLE}Full.DupFreeNameSort.bam" />
    <FullSingle class="buffer.BAMFile" filename="SSVF${SAMPLE}Full/passSingle_${SAMPLE}Full.DupFreeNameSort.bam" />
    <N30Span class="buffer.BAMFile" filename="SSVF${SAMPLE}N30/passSpan_${SAMPLE}N30.DupFreeNameSort.bam" />
    <N30Single class="buffer.BAMFile" filename="SSVF${SAMPLE}N30/passSingle_${SAMPLE}N30.DupFreeNameSort.bam" />
  </input>
  <output>
    <MergedParsedBAM class="buffer.BAMFile" filename="${SAMPLE}Merged.bam" />
  </output>
</MergeBAMs>

<DellyExecution class="operator.delly.Delly" sv.analysis.type="TRA" />
  <input>
    <Reference />
    <MergedParsedBAM />
  </input>
  <output>
    <DellyVCF class="buffer.VCFFile" filename="${SAMPLE}MergeDelly.vcf" />
  </output>
</DellyExecution>

<ParseDelly class="operator.delly.ParseDelly" >
  <input>
    <DellyVCF />
  </input>
  <output>
    <PassingReads class="buffer.FileBuffer" />
  </output>
</ParseDelly>
